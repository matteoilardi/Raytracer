// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------
// ------------ LIBRARY FOR RAYTRACING
// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------------------
// INCLUDED LIBRARIES
// ------------------------------------------------------------------------------------------------------------
#pragma once

#include "colors.hpp"
#include "geometry.hpp"
#include "stb_image_write.h" //external library for LDR images
#include <limits> // library to have infinity as a float

// ------------------------------------------------------------------------------------------------------------
// --------GLOBAL FUNCTIONS, CONSTANTS, FORWARD DECLARATIONS------------------
// ----------------------------------------------------------------------------------------

class Ray;
class Camera;
class ImageTracer;

const float infinite = std::numeric_limits<float>::infinity(); // Define infinity as a float

// ------------------------------------------------------------------------------------------------------------
// -----------RAY CLASS------------------
// ------------------------------------------------------------------------------------------------------------

class Ray {
    public:
      //-------Properties--------
        Point origin; // Origin of the ray
        Vec direction; // Direction of the ray
        float tmin; // Minimum distance run along the ray
        float tmax= infinite; // Maximum distance run along the ray
        int depth=0; // Number of reflections before is considered exhausted
    
      //-----------Constructors-----------
    
      /// Default constructor
    
      /// Constructor with parameters
    
      //--------------------Methods----------------------
    };

// ------------------------------------------------------------------------------------------------------------
// -----------CAMERA CLASS------------------
// ------------------------------------------------------------------------------------------------------------

class Camera {
public:
  //-------Properties--------

  //-----------Constructors-----------

  /// Default constructor

  /// Constructor with parameters

  //--------------------Methods----------------------
};

// ------------------------------------------------------------------------------------------------------------
// -----------IMAGE_TRACER CLASS------------------
// ------------------------------------------------------------------------------------------------------------

class ImageTracer {
    public:
      //-------Properties--------
    
      //-----------Constructors-----------
    
      /// Default constructor
    
      /// Constructor with parameters
    
      //--------------------Methods----------------------
    };